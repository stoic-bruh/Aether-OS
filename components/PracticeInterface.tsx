'use client';

import { useState } from 'react';
import FlashcardList from '@/components/FlashcardList';
import QuizInterface from '@/components/QuizInterface';
import { BookOpen, Brain } from 'lucide-react';

interface PracticeInterfaceProps {
  flashcards: any[];
  resources: any[];
}

export default function PracticeInterface({ flashcards, resources }: PracticeInterfaceProps) {
  const [activeTab, setActiveTab] = useState<'flashcards' | 'quiz'>('flashcards');

  return (
    <div className="space-y-8">
      {/* Tab Navigation */}
      <div className="flex justify-center">
        <div className="bg-black/30 backdrop-blur-sm border border-cyan-400/20 rounded-lg p-1 flex">
          <button
            onClick={() => setActiveTab('flashcards')}
            className={`flex items-center gap-2 px-6 py-3 rounded-md transition-all duration-300 ${
              activeTab === 'flashcards'
                ? 'bg-cyan-400/20 text-cyan-400 border border-cyan-400/50'
                : 'text-purple-200 hover:text-white hover:bg-purple-700/30'
            }`}
          >
            <BookOpen className="h-4 w-4" />
            Flashcards ({flashcards.length})
          </button>
          <button
            onClick={() => setActiveTab('quiz')}
            className={`flex items-center gap-2 px-6 py-3 rounded-md transition-all duration-300 ${
              activeTab === 'quiz'
                ? 'bg-cyan-400/20 text-cyan-400 border border-cyan-400/50'
                : 'text-purple-200 hover:text-white hover:bg-purple-700/30'
            }`}
          >
            <Brain className="h-4 w-4" />
            Generate Quiz
          </button>
        </div>
      </div>

      {/* Tab Content */}
      <div className="animate-in fade-in-0 duration-200">
        {activeTab === 'flashcards' && (
          <div className="space-y-6">
            <div className="text-center">
              <h2 className="text-2xl font-semibold text-white mb-2">Study Flashcards</h2>
              <p className="text-purple-200">
                {flashcards.length > 0 
                  ? `Review ${flashcards.length} flashcard${flashcards.length === 1 ? '' : 's'} generated by AI`
                  : 'No flashcards available. Generate some from your resources!'
                }
              </p>
            </div>
            <FlashcardList flashcards={flashcards} />
          </div>
        )}
        
        {activeTab === 'quiz' && (
          <div className="space-y-6">
            <div className="text-center">
              <h2 className="text-2xl font-semibold text-white mb-2">Take a Quiz</h2>
              <p className="text-purple-200">
                Test your knowledge with AI-generated quizzes from your study materials
              </p>
            </div>
            <QuizInterface resources={resources} />
          </div>
        )}
      </div>
    </div>
  );
}